/*
 * API Identity Data
 * <p>Identity Data API es un facilitador de funcionalidades que engloba información de distintas fuentes de acceso públicas y privadas en el progreso del producto para realizar la validación de identidad del Cliente. El objetivo es que a través de una sola API, el usuario puede acceder, corroborar y validar la identidad de la persona haciendo la solicitud de un producto o servicio.</p><br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.identityData.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * ResponseUnauthorized
 */


public class ResponseUnauthorized {
  @SerializedName("estatus")
  private String estatus = null;

  @SerializedName("mensaje")
  private String mensaje = null;

  public ResponseUnauthorized estatus(String estatus) {
    this.estatus = estatus;
    return this;
  }

   /**
   * sirve para saber que es erróneo el estatus de la respuesta
   * @return estatus
  **/
  @Schema(example = "ERROR", description = "sirve para saber que es erróneo el estatus de la respuesta")
  public String getEstatus() {
    return estatus;
  }

  public void setEstatus(String estatus) {
    this.estatus = estatus;
  }

  public ResponseUnauthorized mensaje(String mensaje) {
    this.mensaje = mensaje;
    return this;
  }

   /**
   * error message.
   * @return mensaje
  **/
  @Schema(example = "Usuario o contraseña incorrecto.", description = "error message.")
  public String getMensaje() {
    return mensaje;
  }

  public void setMensaje(String mensaje) {
    this.mensaje = mensaje;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseUnauthorized responseUnauthorized = (ResponseUnauthorized) o;
    return Objects.equals(this.estatus, responseUnauthorized.estatus) &&
        Objects.equals(this.mensaje, responseUnauthorized.mensaje);
  }

  @Override
  public int hashCode() {
    return Objects.hash(estatus, mensaje);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseUnauthorized {\n");
    
    sb.append("    estatus: ").append(toIndentedString(estatus)).append("\n");
    sb.append("    mensaje: ").append(toIndentedString(mensaje)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
