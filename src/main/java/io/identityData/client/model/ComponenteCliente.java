/*
 * API Identity Data
 * <p>Identity Data API es un facilitador de funcionalidades que engloba información de distintas fuentes de acceso públicas y privadas en el progreso del producto para realizar la validación de identidad del Cliente. El objetivo es que a través de una sola API, el usuario puede acceder, corroborar y validar la identidad de la persona haciendo la solicitud de un producto o servicio.</p><br/>
 *
 * OpenAPI spec version: 1.0
 * Contact: api@circulodecredito.com.mx
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.identityData.client.model;

import com.google.gson.annotations.SerializedName;
import io.swagger.v3.oas.annotations.media.Schema;

import java.util.Objects;

/**
 * ComponenteCliente
 */


public class ComponenteCliente {
  @SerializedName("nombreAplicativo")
  private String nombreAplicativo = null;

  @SerializedName("versionAplicativo")
  private String versionAplicativo = null;

  public ComponenteCliente nombreAplicativo(String nombreAplicativo) {
    this.nombreAplicativo = nombreAplicativo;
    return this;
  }

   /**
   * Get nombreAplicativo
   * @return nombreAplicativo
  **/
  @Schema(example = "APP_FMP", description = "")
  public String getNombreAplicativo() {
    return nombreAplicativo;
  }

  public void setNombreAplicativo(String nombreAplicativo) {
    this.nombreAplicativo = nombreAplicativo;
  }

  public ComponenteCliente versionAplicativo(String versionAplicativo) {
    this.versionAplicativo = versionAplicativo;
    return this;
  }

   /**
   * Get versionAplicativo
   * @return versionAplicativo
  **/
  @Schema(example = "V1.0", description = "")
  public String getVersionAplicativo() {
    return versionAplicativo;
  }

  public void setVersionAplicativo(String versionAplicativo) {
    this.versionAplicativo = versionAplicativo;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ComponenteCliente componenteCliente = (ComponenteCliente) o;
    return Objects.equals(this.nombreAplicativo, componenteCliente.nombreAplicativo) &&
        Objects.equals(this.versionAplicativo, componenteCliente.versionAplicativo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(nombreAplicativo, versionAplicativo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ComponenteCliente {\n");
    
    sb.append("    nombreAplicativo: ").append(toIndentedString(nombreAplicativo)).append("\n");
    sb.append("    versionAplicativo: ").append(toIndentedString(versionAplicativo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
